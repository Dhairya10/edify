// Generated by Dagger (https://dagger.dev).
package com.edify.learning.presentation.revision;

import com.edify.learning.data.repository.LearningRepository;
import com.edify.learning.data.repository.QuestRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RevisionViewModel_Factory implements Factory<RevisionViewModel> {
  private final Provider<LearningRepository> repositoryProvider;

  private final Provider<QuestRepository> questRepositoryProvider;

  public RevisionViewModel_Factory(Provider<LearningRepository> repositoryProvider,
      Provider<QuestRepository> questRepositoryProvider) {
    this.repositoryProvider = repositoryProvider;
    this.questRepositoryProvider = questRepositoryProvider;
  }

  @Override
  public RevisionViewModel get() {
    return newInstance(repositoryProvider.get(), questRepositoryProvider.get());
  }

  public static RevisionViewModel_Factory create(Provider<LearningRepository> repositoryProvider,
      Provider<QuestRepository> questRepositoryProvider) {
    return new RevisionViewModel_Factory(repositoryProvider, questRepositoryProvider);
  }

  public static RevisionViewModel newInstance(LearningRepository repository,
      QuestRepository questRepository) {
    return new RevisionViewModel(repository, questRepository);
  }
}
