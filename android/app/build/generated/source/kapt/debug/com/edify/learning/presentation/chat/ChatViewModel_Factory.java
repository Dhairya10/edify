// Generated by Dagger (https://dagger.dev).
package com.edify.learning.presentation.chat;

import android.content.Context;
import com.edify.learning.data.repository.LearningRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class ChatViewModel_Factory implements Factory<ChatViewModel> {
  private final Provider<Context> contextProvider;

  private final Provider<LearningRepository> repositoryProvider;

  public ChatViewModel_Factory(Provider<Context> contextProvider,
      Provider<LearningRepository> repositoryProvider) {
    this.contextProvider = contextProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ChatViewModel get() {
    return newInstance(contextProvider.get(), repositoryProvider.get());
  }

  public static ChatViewModel_Factory create(Provider<Context> contextProvider,
      Provider<LearningRepository> repositoryProvider) {
    return new ChatViewModel_Factory(contextProvider, repositoryProvider);
  }

  public static ChatViewModel newInstance(Context context, LearningRepository repository) {
    return new ChatViewModel(context, repository);
  }
}
